// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/payment": {
            "post": {
                "description": "Process a payment request",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Process Payment",
                "parameters": [
                    {
                        "description": "Payment info",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.PaymentRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.PaymentResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/payment/callback": {
            "post": {
                "description": "Receive callback from TonowPay after payment success/failure",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "payment"
                ],
                "summary": "Payment Callback (TonowPay)",
                "parameters": [
                    {
                        "description": "TonowPay callback payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.TonowPayCallback"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.TonowPayCallback": {
            "type": "object",
            "properties": {
                "confirmId": {
                    "type": "string"
                },
                "customerEmail": {
                    "type": "string"
                },
                "customerName": {
                    "type": "string"
                },
                "customerPhone": {
                    "type": "string"
                },
                "documentId": {
                    "type": "string"
                },
                "documentNo": {
                    "type": "string"
                },
                "paymentChannel": {
                    "type": "string"
                },
                "paymentId": {
                    "type": "string"
                },
                "referenceId1": {
                    "type": "string"
                },
                "referenceId2": {
                    "type": "string"
                },
                "referenceId3": {
                    "type": "string"
                },
                "referenceId4": {
                    "type": "string"
                },
                "referenceId5": {
                    "type": "string"
                },
                "transactionAmount": {
                    "type": "string"
                },
                "transactionDateandTime": {
                    "type": "string"
                },
                "transactionFee": {
                    "type": "string"
                },
                "transactionId": {
                    "type": "string"
                },
                "transactionName": {
                    "type": "string"
                },
                "transactionStatus": {
                    "type": "string"
                },
                "transactionTax": {
                    "type": "string"
                }
            }
        },
        "types.PaymentRequest": {
            "type": "object",
            "properties": {
                "accountChannel": {
                    "type": "string"
                },
                "accountId": {
                    "type": "string"
                },
                "amount": {
                    "type": "string"
                },
                "backgroundUrl": {
                    "type": "string"
                },
                "charge": {
                    "type": "object",
                    "additionalProperties": true
                },
                "customerEmail": {
                    "type": "string"
                },
                "customerName": {
                    "type": "string"
                },
                "detail": {
                    "type": "string"
                },
                "isSMS": {
                    "type": "boolean"
                },
                "redirectUrl": {
                    "type": "string"
                },
                "referenceId1": {
                    "type": "string"
                },
                "referenceId2": {
                    "type": "string"
                },
                "referenceId3": {
                    "type": "string"
                },
                "referenceId4": {
                    "type": "string"
                }
            }
        },
        "types.PaymentResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": true
                },
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Assembly Visual API documentation",
	Description:      "This is the API documentation for the Assembly Visual project.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
